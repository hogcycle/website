<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>gysli.ng</title>
    <link>https://gysli.ng/</link>
    <description>Recent content on gysli.ng</description>
    <generator>Hugo -- 0.139.0</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Nov 2024 12:45:51 -0500</lastBuildDate>
    <atom:link href="https://gysli.ng/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The (Mostly) Definitive Guide to the Sephia Swap</title>
      <link>https://gysli.ng/posts/auto/sephia/</link>
      <pubDate>Wed, 20 Nov 2024 12:45:51 -0500</pubDate>
      <guid>https://gysli.ng/posts/auto/sephia/</guid>
      <description>&lt;p&gt;The Sephia swap is a often talked about in Miata circles, but documentation for it is scarce. It is my goal with this article to both define the Sephia swap and without getting too intimate, explain how the swap is done. This will not be a guide for swapping a BP in and out of an NA Miata. That has been thoroughly documented by people much more experienced than myself, and would be redundant to cover. I am writing this under the assumption that you know how to turn a wrench. Anything not unique to the Sephia swap will not be covered.
I will simply explain some of the quirks that come with this swap and how I got around them.
Note, this only applies for the 1.8L BP. The 1.6L used in the Sephia is a 8v SOHC turd, and Miata 1.6L&amp;rsquo;s are easy enough to obtain for cheap.&lt;/p&gt;</description>
    </item>
    <item>
      <title>NixOS inside LXC (without flakes) made easy</title>
      <link>https://gysli.ng/posts/tech/proxmox-nixos/</link>
      <pubDate>Mon, 24 Jun 2024 23:52:31 -0500</pubDate>
      <guid>https://gysli.ng/posts/tech/proxmox-nixos/</guid>
      <description>&lt;p&gt;LXCs are great, but LXC templates that are booted and instantly accessible over SSH and running services are better. The best part is that it&amp;rsquo;s done without iterative, stateful tools like Ansible or needing to provision before running a deployment tool like Colmena. It just works.&lt;/p&gt;
&lt;p&gt;lxc.nix is where all the nitty-gritty is. A sample here is provided, and any other nix files need to be imported here to be baked into the tarball.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://gysli.ng/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://gysli.ng/about/</guid>
      <description>&lt;p&gt;Hi, I&amp;rsquo;m Nathaniel ðŸ‘‹&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m passionate about complex technical topics ranging from Linux, self-hosting, DevOps, and especially systems administration.&lt;/p&gt;
&lt;p&gt;I am currently an undergraduate student at the University of Delaware pursuing a B.S in Computer Science. In my free time I like to turn laps and turn wrenches.&lt;/p&gt;
&lt;p&gt;I am:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;an active contributor to &lt;a href=&#34;https://search.nixos.org/packages&#34;&gt;nixpkgs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;an avid selfhoster and digital sovereign&lt;/li&gt;
&lt;li&gt;a gearhead&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find other things I do at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub: &lt;a href=&#34;https://github.com/hogcycle&#34;&gt;hogcycle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Technical</title>
      <link>https://gysli.ng/tech/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://gysli.ng/tech/</guid>
      <description>technical</description>
    </item>
  </channel>
</rss>
